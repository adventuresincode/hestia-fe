{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\t-shakumari\\\\hestia\\\\src\\\\navigation-panel\\\\navigation-panel.jsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport IconButton from '@mui/material/IconButton';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport PeopleIcon from '@mui/icons-material/People';\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport DeviceHubIcon from '@mui/icons-material/DeviceHub';\nimport HubIcon from '@mui/icons-material/Hub';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TemporaryDrawer() {\n  _s();\n  const [state, setState] = React.useState({\n    left: false\n  });\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setState({\n      ...state,\n      [anchor]: open\n    });\n  };\n  const handleItemClick = link => {\n    window.location.href = link; // Redirect to the specified link\n    setOpen(false); // Close the drawer\n  };\n\n  const list = anchor => /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250\n    },\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    children: /*#__PURE__*/_jsxDEV(List, {\n      children: [{\n        text: 'Dashboard',\n        icon: /*#__PURE__*/_jsxDEV(DashboardIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 40\n        }, this),\n        link: '/'\n      }, {\n        text: 'Fleets',\n        icon: /*#__PURE__*/_jsxDEV(DeviceHubIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 37\n        }, this),\n        link: '/fleet'\n      }, {\n        text: 'Clusters',\n        icon: /*#__PURE__*/_jsxDEV(HubIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 39\n        }, this),\n        link: '/cluster'\n      }, {\n        text: 'Users',\n        icon: /*#__PURE__*/_jsxDEV(PeopleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 36\n        }, this),\n        link: '/cluster'\n      }].map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n        disablePadding: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n          component: Link,\n          to: item.link,\n          onClick: () => handleItemClick(item.link),\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: item.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)\n      }, item.text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: ['left'].map(anchor => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: toggleDrawer(anchor, true),\n        children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n        anchor: anchor,\n        open: state[anchor],\n        onClose: toggleDrawer(anchor, false),\n        children: list(anchor)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, anchor, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(TemporaryDrawer, \"sGWxE1byWa6PNKazQ7hnI/OFY3Q=\");\n_c = TemporaryDrawer;\nvar _c;\n$RefreshReg$(_c, \"TemporaryDrawer\");","map":{"version":3,"names":["React","Link","Box","Drawer","IconButton","List","Divider","ListItem","ListItemButton","ListItemIcon","ListItemText","PeopleIcon","DashboardIcon","DeviceHubIcon","HubIcon","jsxDEV","_jsxDEV","TemporaryDrawer","_s","state","setState","useState","left","toggleDrawer","anchor","open","event","type","key","handleItemClick","link","window","location","href","setOpen","list","sx","width","role","onClick","onKeyDown","children","text","icon","fileName","_jsxFileName","lineNumber","columnNumber","map","item","disablePadding","component","to","primary","Fragment","MenuIcon","onClose","_c","$RefreshReg$"],"sources":["C:/Users/t-shakumari/hestia/src/navigation-panel/navigation-panel.jsx"],"sourcesContent":["import * as React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport List from '@mui/material/List';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport PeopleIcon from '@mui/icons-material/People';\r\nimport DashboardIcon from '@mui/icons-material/Dashboard';\r\nimport DeviceHubIcon from '@mui/icons-material/DeviceHub';\r\nimport HubIcon from '@mui/icons-material/Hub';\r\n\r\nexport default function TemporaryDrawer() {\r\n  const [state, setState] = React.useState({\r\n    left: false,\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const handleItemClick = (link) => {\r\n    window.location.href = link; // Redirect to the specified link\r\n    setOpen(false); // Close the drawer\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <Box\r\n      sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250 }}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n          {[\r\n            { text: 'Dashboard', icon: <DashboardIcon />, link: '/' },\r\n            { text: 'Fleets', icon: <DeviceHubIcon />, link: '/fleet' },\r\n            { text: 'Clusters', icon: <HubIcon />, link: '/cluster' },\r\n            { text: 'Users', icon: <PeopleIcon />, link: '/cluster' },\r\n          ].map((item) => (\r\n            <ListItem key={item.text} disablePadding>\r\n              <ListItemButton component={Link} to={item.link} onClick={() => handleItemClick(item.link)}>\r\n                <ListItemIcon>{item.icon}</ListItemIcon>\r\n                <ListItemText primary={item.text} />\r\n              </ListItemButton>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {['left'].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <IconButton onClick={toggleDrawer(anchor, true)}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Drawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n          >\r\n            {list(anchor)}\r\n          </Drawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}